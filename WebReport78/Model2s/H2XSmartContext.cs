// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebReport78.Model2s;

public partial class H2XSmartContext : DbContext
{
    public H2XSmartContext(DbContextOptions<H2XSmartContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TblGateway> TblGateways { get; set; }

    public virtual DbSet<TblGatewayMember> TblGatewayMembers { get; set; }

    public virtual DbSet<TblSsoUser> TblSsoUsers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TblGateway>(entity =>
        {
            entity.HasKey(e => e.Guid);

            entity.ToTable("tbl_Gateway");

            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .HasColumnName("guid");
            entity.Property(e => e.ContentLanguage)
                .HasMaxLength(10)
                .HasDefaultValue("((en))")
                .HasColumnName("content_language");
            entity.Property(e => e.DateCreated).HasColumnName("date_created");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.HomeConfig).HasColumnName("home_config");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .HasColumnName("name");
            entity.Property(e => e.PublicKey)
                .HasMaxLength(500)
                .HasColumnName("public_key");
            entity.Property(e => e.SharedKey)
                .HasMaxLength(500)
                .HasColumnName("shared_key");
            entity.Property(e => e.UserAgent)
                .HasMaxLength(50)
                .HasColumnName("user_agent");
        });

        modelBuilder.Entity<TblGatewayMember>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_tbl_Gateway_Member_1");

            entity.ToTable("tbl_Gateway_Member");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ContentLanguage)
                .HasMaxLength(10)
                .HasDefaultValue("((en))")
                .HasColumnName("content_language");
            entity.Property(e => e.EndTime).HasColumnName("end_time");
            entity.Property(e => e.IdApp)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("id_app");
            entity.Property(e => e.IdLocation)
                .HasMaxLength(50)
                .HasColumnName("id_location");
            entity.Property(e => e.IdMember)
                .HasMaxLength(50)
                .HasComment("Default: User email")
                .HasColumnName("id_member");
            entity.Property(e => e.IdRole)
                .HasMaxLength(50)
                .HasComment("- Super Admin\r\n- Admin\r\n- Member\r\n- Temporary Admin\r\n- Temporary Member")
                .HasColumnName("id_role");
            entity.Property(e => e.StartTime).HasColumnName("start_time");
            entity.Property(e => e.UserAgent)
                .HasMaxLength(50)
                .HasColumnName("user_agent");

            entity.HasOne(d => d.IdLocationNavigation).WithMany(p => p.TblGatewayMembers)
                .HasForeignKey(d => d.IdLocation)
                .HasConstraintName("FK_tbl_Gateway_Member_tbl_Gateway");
        });

        modelBuilder.Entity<TblSsoUser>(entity =>
        {
            entity.ToTable("tbl_SSO_User");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DateCreated).HasColumnName("date_created");
            entity.Property(e => e.DisplayName)
                .HasMaxLength(200)
                .HasColumnName("display_name");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Mobile)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("mobile");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("password");
            entity.Property(e => e.Salt)
                .IsRequired()
                .HasMaxLength(17)
                .HasColumnName("salt");
            entity.Property(e => e.Status).HasColumnName("status");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}