@model List<WebReport78.Models.eventLog>
@{
    ViewData["Title"] = "Báo cáo vào/ra";
    var fromDate = ViewBag.FromDate as DateTime? ?? DateTime.Today;
    var toDate = ViewBag.ToDate as DateTime? ?? DateTime.Today.AddHours(23).AddMinutes(59);
    var fromDateTime = fromDate.ToString("dd-MM-yyyy HH:mm");
    var toDateTime = toDate.ToString("dd-MM-yyyy HH:mm");
    var currentPage = ViewBag.Page as int? ?? 1;
    var pageSize = ViewBag.PageSize as int? ?? 100;
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var filterType = ViewBag.Filter as string ?? "All";
}

<div class="row">
    <div>
        @await Html.PartialAsync("_toastNotice")
        @await Html.PartialAsync("_LoadingData")
        <!-- Header section -->
        @Html.Partial("Header")
        <!--ExportReport-->
        @await Html.PartialAsync("_ExportReport")
        <!--AddCurrentSolider-->
        @Html.Partial("AddCurSoliders")
        <!-- Table section -->
        <div class="table-responsive" style="height: 70vh;">
            <table class="table table-bordered table-hover">
                <thead class="table-light sticky-top">
                    <tr>
                        @if (ViewBag.Filter == "CurrentGuests")
                        {
                            <th>Tên</th>
                            <th>Thời gian</th>
                            <th>Mã định danh</th>
                            <th>Giới tính</th>
                        }
                        else if (ViewBag.Filter == "CurrentSoldiers")
                        {
                            <th>Tên</th>
                            <th>Mã định danh</th>
                            <th>Giới tính</th>
                            <th>Số điện thoại</th>
                            <th class="col-button_action">Hành động</th>
                        }
                        else
                        {
                            <th>Tên</th>
                            <th>Thời gian</th>
                            <th>Loại ra/vào</th>
                            <th>Camera nhận dạng</th>
                            <th class="col-time_LE">Sự kiện</th>
                            if (ViewBag.Filter == "All")
                            {
                                <th class="col-outTime">Out Time</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody id="inOutTableBody">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                @if (ViewBag.Filter == "CurrentGuests")
                                {
                                    <td>@item.Name</td>
                                    <td>@item.formatted_date</td>
                                    <td>@item.idCard</td>
                                    <td>@item.Gender</td>
                                }
                                else if (ViewBag.Filter == "CurrentSoldiers")
                                {
                                    <td>@item.Name</td>
                                    <td>@item.idCard</td>
                                    <td>@item.Gender</td>
                                    <td>@item.phone</td>
                                    <td>
                                        <form data-action="remove" method="post" style="display:inline;">
                                            <input type="hidden" name="userGuid" value="@item.userGuid" />
                                            <button type="submit" class="btn btn-danger btn-sm">Check Out</button>
                                        </form>
                                    </td>
                                }
                                else
                                {
                                    <td>@item.Name</td>
                                    <td>@item.formatted_date</td>
                                    <td>@item.type_eventIO</td>
                                    <td>@item.sourceID</td>
                                    <td>
                                        @if (item.type_eventLE == "L")
                                        {
                                            <span class="text-danger">⏰ Đi muộn</span>
                                        }
                                        else if (item.type_eventLE == "E")
                                        {
                                            <span class="text-warning">🏃 Về sớm</span>
                                        }

                                    </td>
                                    if (ViewBag.Filter == "All")
                                    {
                                        <td clas>@item.count_duration</td>
                                    }
                                }
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            @if (ViewBag.Filter == "CurrentGuests")
                            {
                                <td colspan="4">Không có khách trong ngày.</td>
                            }
                            else if (ViewBag.Filter == "CurrentSoldiers")
                            {
                                <td colspan="6">Không có quân ngũ hiện tại.</td>
                            }
                            else if (filterType == "FILO")
                            {
                                <td colspan="4">Không có dữ liệu check-in/check-out.</td>
                            }
                            else
                            {
                                <td colspan="5">Không có dữ liệu nhân viên.</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Phân trang -->
@if (totalPages > 1 )
{
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { fromDate = fromDateTime, toDate = toDateTime, filterType = filterType, page = currentPage - 1, pageSize = pageSize })">⏮️</a>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { fromDate = fromDateTime, toDate = toDateTime, filterType = filterType, page = i, pageSize = pageSize })">@i</a>
                </li>
            }
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { fromDate = fromDateTime, toDate = toDateTime, filterType = filterType, page = currentPage + 1, pageSize = pageSize })">⏭</a>
            </li>
        </ul>
    </nav>
}
</div>

@section Scripts {
    <script>


            // Load Departments khi chọn Org
            $(document).on("click", ".org-option", function (e) {
                e.preventDefault();
                selectedOrg = $(this).data("id");
                $("#hiddenOrg").val(selectedOrg);
                $("#orgDropdown").html($(this).text() + ' <span class="dropdown-toggle"></span>');
                $("#deptDropdown").html('Chọn phòng ban <span class="dropdown-toggle"></span>');
                $("#empDropdown").html('Chọn nhân viên <span class="dropdown-toggle"></span>');
                $("#hiddenDept").val(0);
                $("#hiddenEmployees").val('');
                selectedDept = 0;
                selectedEmployees = [];
                loadDepartments();
                loadEmployees();
            });

        // Load Employees khi chọn Dept
        $(document).on("click", ".dept-option", function (e) {
            e.preventDefault();
            selectedDept = $(this).data("id");
            $("#hiddenDept").val(selectedDept);
            $("#deptDropdown").html($(this).text() + ' <span class="dropdown-toggle"></span>');
            $("#empDropdown").html('Chọn nhân viên <span class="dropdown-toggle"></span>');
            $("#hiddenEmployees").val('');
            selectedEmployees = [];
            loadEmployees();
        });

        // Chọn nhân viên
        $(document).on("change", ".emp-checkbox", function () {
            let empId = $(this).val();
            let empName = $(this).data("name");
            if (this.checked) {
                selectedEmployees.push({ id: empId, name: empName });
            } else {
                selectedEmployees = selectedEmployees.filter(e => e.id !== empId);
            }
            $("#hiddenEmployees").val(selectedEmployees.map(e => e.id).join(','));
            updateEmpDropdownText();
        });

        function updateEmpDropdownText() {
            let newText;
            if (selectedEmployees.length === 0) {
                newText = "Chọn nhân viên";
            } else if (selectedEmployees.length === 1) {
                newText = selectedEmployees[0].name;
            } else {
                newText = selectedEmployees.length + " nhân viên đã chọn";
            }
            $("#empDropdown").html(newText + ' <span class="dropdown-toggle"></span>');
        }

        function loadDepartments() {
            $.get("/InOut/GetDepartments", { orgId: selectedOrg }, function (data) {
                let html = `<li><a class="dropdown-item dept-option" data-id="0">Không chọn</a></li>`;
                data.forEach(d => {
                    html += `<li><a class="dropdown-item dept-option" data-id="${d.idDept}">${d.name}</a></li>`;
                });
                $("#deptList").html(html);
                if (selectedDept > 0) {
                    let selectedDeptName = data.find(d => d.idDept === selectedDept)?.name || "Chọn phòng ban";
                    $("#deptDropdown").html(selectedDeptName + ' <span class="dropdown-toggle"></span>');
                }
            }).fail(function () {
                console.error("Lỗi khi load departments");
            });
        }

        function loadEmployees() {
            $.get("/InOut/GetEmployees", { orgId: selectedOrg, deptId: selectedDept }, function (data) {
                let html = "";
                data.forEach(e => {
                    let isChecked = selectedEmployees.some(se => se.id === e.guidStaff) ? "checked" : "";
                    html += `
                                <li>
                                    <div class="form-check dropdown-item">
                                        <input class="form-check-input emp-checkbox" type="checkbox" value="${e.guidStaff}" data-name="${e.name}" ${isChecked}>
                                        <label class="form-check-label">${e.name}</label>
                                    </div>
                                </li>`;
                });
                $("#empList").html(html);
                updateEmpDropdownText();
            }).fail(function () {
                console.error("Lỗi khi load employees");
            });
        }

        // Load initial nếu có org/dept đã chọn
        if (selectedOrg > 0) {
            loadDepartments();
            loadEmployees();
        }

        // Debug
        console.log("Initial selectedOrg:", selectedOrg, "selectedDept:", selectedDept, "selectedEmployees:", selectedEmployees);

    </script>
}